#-------------------------------------------------------------------------------------------------------------
# Group names: Henry Lu,Charles Morrison, Bryan Los Santos
# Assignment     : No.9 Part 1
#
# Purpose: Given the following CFG and the LR Parsing table. Write a program to trace the input strings (1) (i+i)*i$  (2) (i*)$.  
#-------------------------------------------------------------------------------------------------------------------

rows, cols = (134, 51)
parsingTable = [["blank" for i in range(cols)] for j in range(rows)]

# HEADER PARSING TABLE
header =['program',';','var','begin','end.',':',',','integer','print','(',"\"value=\"",')','=','+','-','*','/','0','1','2','3','4','5','6','7','8','9','a','b','c','d','f','$','prog','identifier','word','declist','dec','type','statlist','stat','write','assign','expr','term','factor','number','moredigits','sign','digit','letter']

#PARSING TABLE SET UP
parsingTable[0][header.index("program")] = "S2"
parsingTable[0][header.index("prog")] = "1"
parsingTable[1][header.index("$")] = "ACC"
parsingTable[2][header.index("a")] = "S5"
parsingTable[2][header.index("b")] = "S6"
parsingTable[2][header.index("c")] = "S7"
parsingTable[2][header.index("d")] = "S8"
parsingTable[2][header.index("f")] = "S9"
parsingTable[2][header.index("identifier")] = "3"
parsingTable[2][header.index("letter")] = "4"
parsingTable[3][header.index(";")] = "S10"
parsingTable[4][header.index("0")] = "S14"
parsingTable[4][header.index("1")] = "S15"
parsingTable[4][header.index("2")] = "S16"
parsingTable[4][header.index("3")] = "S17"
parsingTable[4][header.index("4")] = "S18"
parsingTable[4][header.index("5")] = "S19"
parsingTable[4][header.index("6")] = "S20"
parsingTable[4][header.index("7")] = "S21"
parsingTable[4][header.index("8")] = "S22"
parsingTable[4][header.index("9")] = "S23"
parsingTable[4][header.index("a")] = "S5"
parsingTable[4][header.index("b")] = "S6" 
parsingTable[4][header.index("c")] = "S7"
parsingTable[4][header.index("d")] = "S8"
parsingTable[4][header.index("f")] = "S9"
parsingTable[4][header.index("word")] = "11"
parsingTable[4][header.index("digit")] = "13"
parsingTable[4][header.index("letter")] = "12"
parsingTable[5][header.index("0")] = "R38"
parsingTable[5][header.index("1")] = "R38"
parsingTable[5][header.index("2")] = "R38"
parsingTable[5][header.index("3")] = "R38"
parsingTable[5][header.index("4")] = "R38"
parsingTable[5][header.index("5")] = "R38"
parsingTable[5][header.index("6")] = "R38"
parsingTable[5][header.index("7")] = "R38"
parsingTable[5][header.index("8")] = "R38"
parsingTable[5][header.index("9")] = "R38"
parsingTable[5][header.index("a")] = "R38"
parsingTable[5][header.index("b")] = "R38" 
parsingTable[5][header.index("c")] = "R38"
parsingTable[5][header.index("d")] = "R38"
parsingTable[5][header.index("f")] = "R38"
parsingTable[6][header.index("0")] = "R39"
parsingTable[6][header.index("1")] = "R39"
parsingTable[6][header.index("2")] = "R39"
parsingTable[6][header.index("3")] = "R39"
parsingTable[6][header.index("4")] = "R39"
parsingTable[6][header.index("5")] = "R39"
parsingTable[6][header.index("6")] = "R39"
parsingTable[6][header.index("7")] = "R39"
parsingTable[6][header.index("8")] = "R39"
parsingTable[6][header.index("9")] = "R39"
parsingTable[6][header.index("a")] = "R39"
parsingTable[6][header.index("b")] = "R39" 
parsingTable[6][header.index("c")] = "R39"
parsingTable[6][header.index("d")] = "R39"
parsingTable[6][header.index("f")] = "R39"
parsingTable[7][header.index("0")] = "R40"
parsingTable[7][header.index("1")] = "R40"
parsingTable[7][header.index("2")] = "R40"
parsingTable[7][header.index("3")] = "R40"
parsingTable[7][header.index("4")] = "R40"
parsingTable[7][header.index("5")] = "R40"
parsingTable[7][header.index("6")] = "R40"
parsingTable[7][header.index("7")] = "R40"
parsingTable[7][header.index("8")] = "R40"
parsingTable[7][header.index("9")] = "R40"
parsingTable[7][header.index("a")] = "R40"
parsingTable[7][header.index("b")] = "R40" 
parsingTable[7][header.index("c")] = "R40"
parsingTable[7][header.index("d")] = "R40"
parsingTable[7][header.index("f")] = "R40"
parsingTable[8][header.index("0")] = "R41"
parsingTable[8][header.index("1")] = "R41"
parsingTable[8][header.index("2")] = "R41"
parsingTable[8][header.index("3")] = "R41"
parsingTable[8][header.index("4")] = "R41"
parsingTable[8][header.index("5")] = "R41"
parsingTable[8][header.index("6")] = "R41"
parsingTable[8][header.index("7")] = "R41"
parsingTable[8][header.index("8")] = "R41"
parsingTable[8][header.index("9")] = "R41"
parsingTable[8][header.index("a")] = "R41"
parsingTable[8][header.index("b")] = "R41" 
parsingTable[8][header.index("c")] = "R41"
parsingTable[8][header.index("d")] = "R41"
parsingTable[8][header.index("f")] = "R41"
parsingTable[9][header.index("0")] = "R42"
parsingTable[9][header.index("1")] = "R42"
parsingTable[9][header.index("2")] = "R42"
parsingTable[9][header.index("3")] = "R42"
parsingTable[9][header.index("4")] = "R42"
parsingTable[9][header.index("5")] = "R42"
parsingTable[9][header.index("6")] = "R42"
parsingTable[9][header.index("7")] = "R42"
parsingTable[9][header.index("8")] = "R42"
parsingTable[9][header.index("9")] = "R42"
parsingTable[9][header.index("a")] = "R42"
parsingTable[9][header.index("b")] = "R42" 
parsingTable[9][header.index("c")] = "R42"
parsingTable[9][header.index("d")] = "R42"
parsingTable[9][header.index("f")] = "R42"
parsingTable[10][header.index("var")] = "S24"
parsingTable[11][header.index("=")] = "R2"
parsingTable[11][header.index(":")] = "R2"
parsingTable[11][header.index(";")] = "R2"
parsingTable[11][header.index("*")] = "R2"
parsingTable[11][header.index("/")] = "R2"
parsingTable[11][header.index("-")] = "R2"
parsingTable[11][header.index("+")] = "R2"
parsingTable[11][header.index(")")] = "R2"
parsingTable[11][header.index(",")] = "R2"
parsingTable[12][header.index("0")] = "S14"
parsingTable[12][header.index("1")] = "S15"
parsingTable[12][header.index("2")] = "S16"
parsingTable[12][header.index("3")] = "S17"
parsingTable[12][header.index("4")] = "S18"
parsingTable[12][header.index("5")] = "S19"
parsingTable[12][header.index("6")] = "S20"
parsingTable[12][header.index("7")] = "S21"
parsingTable[12][header.index("8")] = "S22"
parsingTable[12][header.index("9")] = "S23"
parsingTable[12][header.index("a")] = "S5"
parsingTable[12][header.index("b")] = "S6" 
parsingTable[12][header.index("c")] = "S7"
parsingTable[12][header.index("d")] = "S8"
parsingTable[12][header.index("f")] = "S9"
parsingTable[12][header.index("word")] = "25"
parsingTable[12][header.index("digit")] = "13"
parsingTable[12][header.index("letter")] = "12"
parsingTable[13][header.index("0")] = "S14"
parsingTable[13][header.index("1")] = "S15"
parsingTable[13][header.index("2")] = "S16"
parsingTable[13][header.index("3")] = "S17"
parsingTable[13][header.index("4")] = "S18"
parsingTable[13][header.index("5")] = "S19"
parsingTable[13][header.index("6")] = "S20"
parsingTable[13][header.index("7")] = "S21"
parsingTable[13][header.index("8")] = "S22"
parsingTable[13][header.index("9")] = "S23"
parsingTable[13][header.index("a")] = "S5"
parsingTable[13][header.index("b")] = "S6" 
parsingTable[13][header.index("c")] = "S7"
parsingTable[13][header.index("d")] = "S8"
parsingTable[13][header.index("f")] = "S9"
parsingTable[13][header.index("word")] = "26"
parsingTable[13][header.index("digit")] = "13"
parsingTable[13][header.index("letter")] = "12"
parsingTable[14][header.index("0")] = "R28"
parsingTable[14][header.index("1")] = "R28"
parsingTable[14][header.index("2")] = "R28"
parsingTable[14][header.index("3")] = "R28"
parsingTable[14][header.index("4")] = "R28"
parsingTable[14][header.index("5")] = "R28"
parsingTable[14][header.index("6")] = "R28"
parsingTable[14][header.index("7")] = "R28"
parsingTable[14][header.index("8")] = "R28"
parsingTable[14][header.index("9")] = "R28"
parsingTable[14][header.index("a")] = "R28"
parsingTable[14][header.index("b")] = "R28" 
parsingTable[14][header.index("c")] = "R28"
parsingTable[14][header.index("d")] = "R28"
parsingTable[14][header.index("f")] = "R28"
parsingTable[15][header.index("0")] = "R29"
parsingTable[15][header.index("1")] = "R29"
parsingTable[15][header.index("2")] = "R29"
parsingTable[15][header.index("3")] = "R29"
parsingTable[15][header.index("4")] = "R29"
parsingTable[15][header.index("5")] = "R29"
parsingTable[15][header.index("6")] = "R29"
parsingTable[15][header.index("7")] = "R29"
parsingTable[15][header.index("8")] = "R29"
parsingTable[15][header.index("9")] = "R29"
parsingTable[15][header.index("a")] = "R29"
parsingTable[15][header.index("b")] = "R29" 
parsingTable[15][header.index("c")] = "R29"
parsingTable[15][header.index("d")] = "R29"
parsingTable[15][header.index("f")] = "R29"
parsingTable[16][header.index("0")] = "R30"
parsingTable[16][header.index("1")] = "R30"
parsingTable[16][header.index("2")] = "R30"
parsingTable[16][header.index("3")] = "R30"
parsingTable[16][header.index("4")] = "R30"
parsingTable[16][header.index("5")] = "R30"
parsingTable[16][header.index("6")] = "R30"
parsingTable[16][header.index("7")] = "R30"
parsingTable[16][header.index("8")] = "R30"
parsingTable[16][header.index("9")] = "R30"
parsingTable[16][header.index("a")] = "R30"
parsingTable[16][header.index("b")] = "R30" 
parsingTable[16][header.index("c")] = "R30"
parsingTable[16][header.index("d")] = "R30"
parsingTable[16][header.index("f")] = "R30"
parsingTable[17][header.index("0")] = "R31"
parsingTable[17][header.index("1")] = "R31"
parsingTable[17][header.index("2")] = "R31"
parsingTable[17][header.index("3")] = "R31"
parsingTable[17][header.index("4")] = "R31"
parsingTable[17][header.index("5")] = "R31"
parsingTable[17][header.index("6")] = "R31"
parsingTable[17][header.index("7")] = "R31"
parsingTable[17][header.index("8")] = "R31"
parsingTable[17][header.index("9")] = "R31"
parsingTable[17][header.index("a")] = "R31"
parsingTable[17][header.index("b")] = "R31" 
parsingTable[17][header.index("c")] = "R31"
parsingTable[17][header.index("d")] = "R31"
parsingTable[17][header.index("f")] = "R31"
parsingTable[18][header.index("0")] = "R32"
parsingTable[18][header.index("1")] = "R32"
parsingTable[18][header.index("2")] = "R32"
parsingTable[18][header.index("3")] = "R32"
parsingTable[18][header.index("4")] = "R32"
parsingTable[18][header.index("5")] = "R32"
parsingTable[18][header.index("6")] = "R32"
parsingTable[18][header.index("7")] = "R32"
parsingTable[18][header.index("8")] = "R32"
parsingTable[18][header.index("9")] = "R32"
parsingTable[18][header.index("a")] = "R32"
parsingTable[18][header.index("b")] = "R32" 
parsingTable[18][header.index("c")] = "R32"
parsingTable[18][header.index("d")] = "R32"
parsingTable[18][header.index("f")] = "R32"
parsingTable[19][header.index("0")] = "R33"
parsingTable[19][header.index("1")] = "R33"
parsingTable[19][header.index("2")] = "R33"
parsingTable[19][header.index("3")] = "R33"
parsingTable[19][header.index("4")] = "R33"
parsingTable[19][header.index("5")] = "R33"
parsingTable[19][header.index("6")] = "R33"
parsingTable[19][header.index("7")] = "R33"
parsingTable[19][header.index("8")] = "R33"
parsingTable[19][header.index("9")] = "R33"
parsingTable[19][header.index("a")] = "R33"
parsingTable[19][header.index("b")] = "R33" 
parsingTable[19][header.index("c")] = "R33"
parsingTable[19][header.index("d")] = "R33"
parsingTable[19][header.index("f")] = "R33"
parsingTable[20][header.index("0")] = "R34"
parsingTable[20][header.index("1")] = "R34"
parsingTable[20][header.index("2")] = "R34"
parsingTable[20][header.index("3")] = "R34"
parsingTable[20][header.index("4")] = "R34"
parsingTable[20][header.index("5")] = "R34"
parsingTable[20][header.index("6")] = "R34"
parsingTable[20][header.index("7")] = "R34"
parsingTable[20][header.index("8")] = "R34"
parsingTable[20][header.index("9")] = "R34"
parsingTable[20][header.index("a")] = "R34"
parsingTable[20][header.index("b")] = "R34" 
parsingTable[20][header.index("c")] = "R34"
parsingTable[20][header.index("d")] = "R34"
parsingTable[20][header.index("f")] = "R34"
parsingTable[21][header.index("0")] = "R35"
parsingTable[21][header.index("1")] = "R35"
parsingTable[21][header.index("2")] = "R35"
parsingTable[21][header.index("3")] = "R35"
parsingTable[21][header.index("4")] = "R35"
parsingTable[21][header.index("5")] = "R35"
parsingTable[21][header.index("6")] = "R35"
parsingTable[21][header.index("7")] = "R35"
parsingTable[21][header.index("8")] = "R35"
parsingTable[21][header.index("9")] = "R35"
parsingTable[21][header.index("a")] = "R35"
parsingTable[21][header.index("b")] = "R35" 
parsingTable[21][header.index("c")] = "R35"
parsingTable[21][header.index("d")] = "R35"
parsingTable[21][header.index("f")] = "R35"
parsingTable[22][header.index("0")] = "R36"
parsingTable[22][header.index("1")] = "R36"
parsingTable[22][header.index("2")] = "R36"
parsingTable[22][header.index("3")] = "R36"
parsingTable[22][header.index("4")] = "R36"
parsingTable[22][header.index("5")] = "R36"
parsingTable[22][header.index("6")] = "R36"
parsingTable[22][header.index("7")] = "R36"
parsingTable[22][header.index("8")] = "R36"
parsingTable[22][header.index("9")] = "R36"
parsingTable[22][header.index("a")] = "R36"
parsingTable[22][header.index("b")] = "R36" 
parsingTable[22][header.index("c")] = "R36"
parsingTable[22][header.index("d")] = "R36"
parsingTable[22][header.index("f")] = "R36"
parsingTable[23][header.index("0")] = "R37"
parsingTable[23][header.index("1")] = "R37"
parsingTable[23][header.index("2")] = "R37"
parsingTable[23][header.index("3")] = "R37"
parsingTable[23][header.index("4")] = "R37"
parsingTable[23][header.index("5")] = "R37"
parsingTable[23][header.index("6")] = "R37"
parsingTable[23][header.index("7")] = "R37"
parsingTable[23][header.index("8")] = "R37"
parsingTable[23][header.index("9")] = "R37"
parsingTable[23][header.index("a")] = "R37"
parsingTable[23][header.index("b")] = "R37" 
parsingTable[23][header.index("c")] = "R37"
parsingTable[23][header.index("d")] = "R37"
parsingTable[23][header.index("f")] = "R37"
parsingTable[24][header.index("a")] = "S5"
parsingTable[24][header.index("b")] = "S6" 
parsingTable[24][header.index("c")] = "S7"
parsingTable[24][header.index("d")] = "S8"
parsingTable[24][header.index("f")] = "S9"
parsingTable[24][header.index("identifier")] = "29"
parsingTable[24][header.index("declist")] = "27"
parsingTable[24][header.index("dec")] = "28"
parsingTable[24][header.index("letter")] = "4"
parsingTable[25][header.index("=")] = "R3"
parsingTable[25][header.index(":")] = "R3"
parsingTable[25][header.index(";")] = "R3"
parsingTable[25][header.index("*")] = "R3"
parsingTable[25][header.index("/")] = "R3"
parsingTable[25][header.index("-")] = "R3"
parsingTable[25][header.index("+")] = "R3"
parsingTable[25][header.index(")")] = "R3"
parsingTable[25][header.index(",")] = "R3"
parsingTable[26][header.index("=")] = "R3"
parsingTable[26][header.index(":")] = "R3"
parsingTable[26][header.index(";")] = "R3"
parsingTable[26][header.index("*")] = "R3"
parsingTable[26][header.index("/")] = "R3"
parsingTable[26][header.index("-")] = "R3"
parsingTable[26][header.index("+")] = "R3"
parsingTable[26][header.index(")")] = "R3"
parsingTable[26][header.index(",")] = "R3"
parsingTable[27][header.index("begin")] = "S30"
parsingTable[28][header.index(":")] = "S31"
parsingTable[29][header.index(":")] = "R7"
parsingTable[29][header.index(",")] = "S32"
parsingTable[30][header.index("print")] = "S37"
parsingTable[30][header.index("a")] = "S5"
parsingTable[30][header.index("b")] = "S6" 
parsingTable[30][header.index("c")] = "S7"
parsingTable[30][header.index("d")] = "S8"
parsingTable[30][header.index("f")] = "S9"
parsingTable[30][header.index("identifier")] = "38"
parsingTable[30][header.index("statlist")] = "33"
parsingTable[30][header.index("stat")] = "34"
parsingTable[30][header.index("write")] = "35"
parsingTable[30][header.index("assign")] = "36"
parsingTable[30][header.index("letter")] = "4"
parsingTable[31][header.index("integer")] = "S40"
parsingTable[31][header.index("type")] = "39"
parsingTable[32][header.index("a")] = "S5"
parsingTable[32][header.index("b")] = "S6" 
parsingTable[32][header.index("c")] = "S7"
parsingTable[32][header.index("d")] = "S8"
parsingTable[32][header.index("f")] = "S9"
parsingTable[32][header.index("identifier")] = "29"
parsingTable[32][header.index("dec")] = "41"
parsingTable[32][header.index("letter")] = "4"
parsingTable[33][header.index("end.")] = "S42"
parsingTable[34][header.index("end.")] = "R9"
parsingTable[35][header.index("end.")] = "R10"
parsingTable[36][header.index("end.")] = "R11"
parsingTable[37][header.index("(")] = "S43"
parsingTable[38][header.index("=")] = "S44"
parsingTable[39][header.index(";")] = "S45"
parsingTable[40][header.index(";")] = "R8"
parsingTable[41][header.index(":")] = "R6"
parsingTable[42][header.index("$")] = "R1"
parsingTable[43][header.index("\"value=\"")] = "S46"
parsingTable[44][header.index("-")] = "S56"
parsingTable[44][header.index("+")] = "S55"
parsingTable[44][header.index("(")] = "S52"
parsingTable[44][header.index("0")] = "S14"
parsingTable[44][header.index("1")] = "S15"
parsingTable[44][header.index("2")] = "S16"
parsingTable[44][header.index("3")] = "S17"
parsingTable[44][header.index("4")] = "S18"
parsingTable[44][header.index("5")] = "S19"
parsingTable[44][header.index("6")] = "S20"
parsingTable[44][header.index("7")] = "S21"
parsingTable[44][header.index("8")] = "S22"
parsingTable[44][header.index("9")] = "S23"
parsingTable[44][header.index("a")] = "S5"
parsingTable[44][header.index("b")] = "S6" 
parsingTable[44][header.index("c")] = "S7"
parsingTable[44][header.index("d")] = "S8"
parsingTable[44][header.index("f")] = "S9"
parsingTable[44][header.index("identifier")] = "50"
parsingTable[44][header.index("expr")] = "47"
parsingTable[44][header.index("term")] = "48"
parsingTable[44][header.index("factor")] = "49"
parsingTable[44][header.index("number")] = "51"
parsingTable[44][header.index("moredigits")] = "54"
parsingTable[44][header.index("sign")] = "53"
parsingTable[44][header.index("digit")] = "57"
parsingTable[44][header.index("letter")] = "4"
parsingTable[45][header.index("begin")] = "R5"
parsingTable[46][header.index(",")] = "S58"
parsingTable[47][header.index(";")] = "S59"
parsingTable[47][header.index("-")] = "S61"
parsingTable[47][header.index("+")] = "S60"
parsingTable[48][header.index(";")] = "R16"
parsingTable[48][header.index("*")] = "S62"
parsingTable[48][header.index("/")] = "S63"
parsingTable[48][header.index("-")] = "R16"
parsingTable[48][header.index("+")] = "R16"
parsingTable[48][header.index(")")] = "R16"
parsingTable[49][header.index(";")] = "R19"
parsingTable[49][header.index("*")] = "R19"
parsingTable[49][header.index("/")] = "R19"
parsingTable[49][header.index("-")] = "R19"
parsingTable[49][header.index("+")] = "R19"
parsingTable[49][header.index(")")] = "R19"
parsingTable[50][header.index(";")] = "R20"
parsingTable[50][header.index("*")] = "R20"
parsingTable[50][header.index("/")] = "R20"
parsingTable[50][header.index("-")] = "R20"
parsingTable[50][header.index("+")] = "R20"
parsingTable[50][header.index(")")] = "R20"
parsingTable[51][header.index(";")] = "R21"
parsingTable[51][header.index("*")] = "R21"
parsingTable[51][header.index("/")] = "R21"
parsingTable[51][header.index("-")] = "R21"
parsingTable[51][header.index("+")] = "R21"
parsingTable[51][header.index(")")] = "R21"
parsingTable[52][header.index("-")] = "S56"
parsingTable[52][header.index("+")] = "S55"
parsingTable[52][header.index("(")] = "S52"
parsingTable[52][header.index("0")] = "S14"
parsingTable[52][header.index("1")] = "S15"
parsingTable[52][header.index("2")] = "S16"
parsingTable[52][header.index("3")] = "S17"
parsingTable[52][header.index("4")] = "S18"
parsingTable[52][header.index("5")] = "S19"
parsingTable[52][header.index("6")] = "S20"
parsingTable[52][header.index("7")] = "S21"
parsingTable[52][header.index("8")] = "S22"
parsingTable[52][header.index("9")] = "S23"
parsingTable[52][header.index("a")] = "S5"
parsingTable[52][header.index("b")] = "S6" 
parsingTable[52][header.index("c")] = "S7"
parsingTable[52][header.index("d")] = "S8"
parsingTable[52][header.index("f")] = "S9"
parsingTable[52][header.index("identifier")] = "50"
parsingTable[52][header.index("expr")] = "64"
parsingTable[52][header.index("term")] = "48"
parsingTable[52][header.index("factor")] = "49"
parsingTable[52][header.index("number")] = "51"
parsingTable[52][header.index("moredigits")] = "54"
parsingTable[52][header.index("sign")] = "53"
parsingTable[52][header.index("digit")] = "57"
parsingTable[52][header.index("letter")] = "4"
parsingTable[53][header.index("0")] = "S14"
parsingTable[53][header.index("1")] = "S15"
parsingTable[53][header.index("2")] = "S16"
parsingTable[53][header.index("3")] = "S17"
parsingTable[53][header.index("4")] = "S18"
parsingTable[53][header.index("5")] = "S19"
parsingTable[53][header.index("6")] = "S20"
parsingTable[53][header.index("7")] = "S21"
parsingTable[53][header.index("8")] = "S22"
parsingTable[53][header.index("9")] = "S23"
parsingTable[53][header.index("moredigits")] = "65"
parsingTable[53][header.index("digit")] = "57"
parsingTable[54][header.index(";")] = "R24"
parsingTable[54][header.index("*")] = "R24"
parsingTable[54][header.index("/")] = "R24"
parsingTable[54][header.index("-")] = "R24"
parsingTable[54][header.index("+")] = "R24"
parsingTable[54][header.index(")")] = "R24"
parsingTable[55][header.index("0")] = "R26"
parsingTable[55][header.index("1")] = "R26"
parsingTable[55][header.index("2")] = "R26"
parsingTable[55][header.index("3")] = "R26"
parsingTable[55][header.index("4")] = "R26"
parsingTable[55][header.index("5")] = "R26"
parsingTable[55][header.index("6")] = "R26"
parsingTable[55][header.index("7")] = "R26"
parsingTable[55][header.index("8")] = "R26"
parsingTable[55][header.index("9")] = "R26"
parsingTable[56][header.index("0")] = "R27"
parsingTable[56][header.index("1")] = "R27"
parsingTable[56][header.index("2")] = "R27"
parsingTable[56][header.index("3")] = "R27"
parsingTable[56][header.index("4")] = "R27"
parsingTable[56][header.index("5")] = "R27"
parsingTable[56][header.index("6")] = "R27"
parsingTable[56][header.index("7")] = "R27"
parsingTable[56][header.index("8")] = "R27"
parsingTable[56][header.index("9")] = "R27"
parsingTable[57][header.index("0")] = "S14"
parsingTable[57][header.index("1")] = "S15"
parsingTable[57][header.index("2")] = "S16"
parsingTable[57][header.index("3")] = "S17"
parsingTable[57][header.index("4")] = "S18"
parsingTable[57][header.index("5")] = "S19"
parsingTable[57][header.index("6")] = "S20"
parsingTable[57][header.index("7")] = "S21"
parsingTable[57][header.index("8")] = "S22"
parsingTable[57][header.index("9")] = "S23"
parsingTable[57][header.index("moredigits")] = "66"
parsingTable[57][header.index("digit")] = "57"
parsingTable[58][header.index("a")] = "S5"
parsingTable[58][header.index("b")] = "S6"
parsingTable[58][header.index("c")] = "S7"
parsingTable[58][header.index("d")] = "S8"
parsingTable[58][header.index("f")] = "S9"
parsingTable[58][header.index("identifier")] = "67"
parsingTable[58][header.index("letter")] = "4"
parsingTable[59][header.index("end.")] = "R13"
parsingTable[60][header.index("-")] = "S56"
parsingTable[60][header.index("+")] = "S55"
parsingTable[60][header.index("(")] = "S52"
parsingTable[60][header.index("0")] = "S14"
parsingTable[60][header.index("1")] = "S15"
parsingTable[60][header.index("2")] = "S16"
parsingTable[60][header.index("3")] = "S17"
parsingTable[60][header.index("4")] = "S18"
parsingTable[60][header.index("5")] = "S19"
parsingTable[60][header.index("6")] = "S20"
parsingTable[60][header.index("7")] = "S21"
parsingTable[60][header.index("8")] = "S22"
parsingTable[60][header.index("9")] = "S23"
parsingTable[60][header.index("a")] = "S5"
parsingTable[60][header.index("b")] = "S6"
parsingTable[60][header.index("c")] = "S7"
parsingTable[60][header.index("d")] = "S8"
parsingTable[60][header.index("f")] = "S9"
parsingTable[60][header.index("identifier")] = "50"
parsingTable[60][header.index("expr")] = "68"
parsingTable[60][header.index("term")] = "48"
parsingTable[60][header.index("factor")] = "49"
parsingTable[60][header.index("number")] = "51"
parsingTable[60][header.index("moredigits")] = "54"
parsingTable[60][header.index("sign")] = "53"
parsingTable[60][header.index("digit")] = "57"
parsingTable[60][header.index("letter")] = "4"
parsingTable[61][header.index("-")] = "S56"
parsingTable[61][header.index("+")] = "S55"
parsingTable[61][header.index("(")] = "S52"
parsingTable[61][header.index("0")] = "S14"
parsingTable[61][header.index("1")] = "S15"
parsingTable[61][header.index("2")] = "S16"
parsingTable[61][header.index("3")] = "S17"
parsingTable[61][header.index("4")] = "S18"
parsingTable[61][header.index("5")] = "S19"
parsingTable[61][header.index("6")] = "S20"
parsingTable[61][header.index("7")] = "S21"
parsingTable[61][header.index("8")] = "S22"
parsingTable[61][header.index("9")] = "S23"
parsingTable[61][header.index("a")] = "S5"
parsingTable[61][header.index("b")] = "S6"
parsingTable[61][header.index("c")] = "S7"
parsingTable[61][header.index("d")] = "S8"
parsingTable[61][header.index("f")] = "S9"
parsingTable[61][header.index("identifier")] = "50"
parsingTable[61][header.index("expr")] = "69"
parsingTable[61][header.index("term")] = "48"
parsingTable[61][header.index("factor")] = "49"
parsingTable[61][header.index("number")] = "51"
parsingTable[61][header.index("moredigits")] = "54"
parsingTable[61][header.index("sign")] = "53"
parsingTable[61][header.index("digit")] = "57"
parsingTable[61][header.index("letter")] = "4"
parsingTable[62][header.index("-")] = "S56"
parsingTable[62][header.index("+")] = "S55"
parsingTable[62][header.index("(")] = "S52"
parsingTable[62][header.index("0")] = "S14"
parsingTable[62][header.index("1")] = "S15"
parsingTable[62][header.index("2")] = "S16"
parsingTable[62][header.index("3")] = "S17"
parsingTable[62][header.index("4")] = "S18"
parsingTable[62][header.index("5")] = "S19"
parsingTable[62][header.index("6")] = "S20"
parsingTable[62][header.index("7")] = "S21"
parsingTable[62][header.index("8")] = "S22"
parsingTable[62][header.index("9")] = "S23"
parsingTable[62][header.index("a")] = "S5"
parsingTable[62][header.index("b")] = "S6"
parsingTable[62][header.index("c")] = "S7"
parsingTable[62][header.index("d")] = "S8"
parsingTable[62][header.index("f")] = "S9"
parsingTable[62][header.index("factor")] = "70"
parsingTable[62][header.index("number")] = "51"
parsingTable[62][header.index("moredigits")] = "54"
parsingTable[62][header.index("sign")] = "53"
parsingTable[62][header.index("digit")] = "57"
parsingTable[62][header.index("letter")] = "4"
parsingTable[63][header.index("-")] = "S56"
parsingTable[63][header.index("+")] = "S55"
parsingTable[63][header.index("(")] = "S52"
parsingTable[63][header.index("0")] = "S14"
parsingTable[63][header.index("1")] = "S15"
parsingTable[63][header.index("2")] = "S16"
parsingTable[63][header.index("3")] = "S17"
parsingTable[63][header.index("4")] = "S18"
parsingTable[63][header.index("5")] = "S19"
parsingTable[63][header.index("6")] = "S20"
parsingTable[63][header.index("7")] = "S21"
parsingTable[63][header.index("8")] = "S22"
parsingTable[63][header.index("9")] = "S23"
parsingTable[63][header.index("a")] = "S5"
parsingTable[63][header.index("b")] = "S6"
parsingTable[63][header.index("c")] = "S7"
parsingTable[63][header.index("d")] = "S8"
parsingTable[63][header.index("f")] = "S9"
parsingTable[63][header.index("factor")] = "71"
parsingTable[63][header.index("number")] = "51"
parsingTable[63][header.index("moredigits")] = "54"
parsingTable[63][header.index("sign")] = "53"
parsingTable[63][header.index("digit")] = "57"
parsingTable[63][header.index("letter")] = "4"
parsingTable[64][header.index("-")] = "S61"
parsingTable[64][header.index("+")] = "S60"
parsingTable[64][header.index(")")] = "S72"
parsingTable[65][header.index(";")] = "R23"
parsingTable[65][header.index("*")] = "R23"
parsingTable[65][header.index("/")] = "R23"
parsingTable[65][header.index("-")] = "R23"
parsingTable[65][header.index("+")] = "R23"
parsingTable[65][header.index(")")] = "R23"
parsingTable[66][header.index(";")] = "R25"
parsingTable[66][header.index("*")] = "R25"
parsingTable[66][header.index("/")] = "R25"
parsingTable[66][header.index("-")] = "R25"
parsingTable[66][header.index("+")] = "R25"
parsingTable[66][header.index(")")] = "R25"
parsingTable[67][header.index(")")] = "S73"
parsingTable[68][header.index(";")] = "R14"
parsingTable[68][header.index("-")] = "S61"
parsingTable[68][header.index("-")] = "R14"
parsingTable[68][header.index("+")] = "S60"
parsingTable[68][header.index("+")] = "R14"
parsingTable[68][header.index(")")] = "R14"
parsingTable[69][header.index(";")] = "R15"
parsingTable[69][header.index("-")] = "S61"
parsingTable[69][header.index("-")] = "R15"
parsingTable[69][header.index("+")] = "S60"
parsingTable[69][header.index("+")] = "R15"
parsingTable[69][header.index(")")] = "R15"
parsingTable[70][header.index(";")] = "R17"
parsingTable[70][header.index("*")] = "R17"
parsingTable[70][header.index("/")] = "R17"
parsingTable[70][header.index("-")] = "R17"
parsingTable[70][header.index("+")] = "R17"
parsingTable[70][header.index(")")] = "R17"
parsingTable[71][header.index(";")] = "R18"
parsingTable[71][header.index("*")] = "R18"
parsingTable[71][header.index("/")] = "R18"
parsingTable[71][header.index("-")] = "R18"
parsingTable[71][header.index("+")] = "R18"
parsingTable[71][header.index(")")] = "R18"
parsingTable[72][header.index(";")] = "R22"
parsingTable[72][header.index("*")] = "R22"
parsingTable[72][header.index("/")] = "R22"
parsingTable[72][header.index("-")] = "R22"
parsingTable[72][header.index("+")] = "R22"
parsingTable[72][header.index(")")] = "R22"
parsingTable[73][header.index(";")] = "S74"
parsingTable[74][header.index("end.")] = "R12"

# for x in parsingTable:
#     print(x)
# STATE COLUMN TABLE
state = []
for i in range(0,134):
    state.append(i)

LeftRowTrace = ['','prog','identifier','word','word','declist','dec','dec','type','statlist','stat','stat','write','assign','expr','expr','expr','term','term','term','factor','factor','factor','number','number','moredigits','sign','sign','digit','digit','digit','digit','digit','digit','digit','digit','digit','digit','letter','letter','letter','letter','letter']
RightRowTrace = ['','program identifier ; var declist begin statlist end.','letter word','letter word','digit word','dec : type ;','identifier , dec','identifier','integer','stat','write','assign','print ( “value=” , identifier ) ;','identifier = expr ;','expr + expr','expr - expr','term','term * factor','term / factor','factor','identifier','number','( expr )','sign moredigits','moredigits','digit moredigits','+','-','0','1','2','3','4','5','6','7','8','9','a','b','c','d','f']
reservedwords = ['program','var','begin','end.','integer','print']
file = open('finalp2.txt',"r",encoding='UTF8').read()

newInput = file.split()
inputString = []
for val in newInput:
    if val in reservedwords:
        inputString.append(val)
    else:
        for x in val:
            inputString.append(x)
print(inputString)


# PRE-STACK PROCESSING SET UP.
Stack = []
Stack.append(state[0])
result = ""

# print("input string:",end="")
# for i in range(len(inputString)):
#     print(inputString[i], end= ""),
#RECURSION FUNCTION
def StackPopAlgo(input,prevRead):
    print(Stack)
    popValue = Stack.pop()
    if popValue not in state:
        result = "REJECT"
        print(result)
        return
    # GO TO PARSING TABLE [POPVALUE, INPUTVALUE]
    if input in header:
        idxh = header.index(input)
        parseTableValue = parsingTable[int(popValue)][idxh]
        #ACC = ACCEPT
        if parseTableValue == "ACC":
            result = "ACCEPT"
            print(result)
            return
        #IF PARSE TABLE VALUE IS NON-TERMINALS
        if parseTableValue.isnumeric():
            Stack.append(popValue)
            Stack.append(input)
            Stack.append(int(parseTableValue))
            StackPopAlgo(prevRead,prevRead)
        #REJECT IF IT IS BLANK
        elif parseTableValue == "blank":
            result = "REJECT"
            print(result)
            return 
        #ALGO FOR S VALUES
        elif parseTableValue[0] == "S":
            print(Stack)
            Stack.append(int(popValue))
            Stack.append(input)
            if len(parseTableValue) == 3:
                Stack.append(int(parseTableValue[1] + parseTableValue[2]))
            else:
                Stack.append(int(parseTableValue[1]))
            print(Stack)
        #ALGO FOR R VALUES
        if parseTableValue[0] == "R":
            Stack.append(int(popValue))
            for x in range(len(RightRowTrace[int(parseTableValue[1:])])*2):
                print(len('Rlen(===' + RightRowTrace[int(parseTableValue[1:])])*2)
                Stack.pop()
            StackPopAlgo(LeftRowTrace[int(parseTableValue[1:])],input)

# LOOP INTO INPUT STRING
for val in inputString:
    while result == "":
        StackPopAlgo(val,val)
        break;
    if val == '$':
        break;
    if result != '':
        break;